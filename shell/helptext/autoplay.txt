autoplay [options] - computer vs computer games

Example:

    autoplay
    autoplay stop
    autoplay -logfile /path/to/log.txt
    autoplay -logfile foo.txt -leavefile1 trial.klv2

Options:
    -logfile foo.txt   -- logs games to foo.txt
    -lexicon CSW19  -- uses the CSW19 lexicon
    -letterdistribution norwegian  -- uses the Norwegian letter distribution.
        (you should probably set the lexicon option to be that of a Norwegian
        gaddag name as well)

    -leavefile1 filename.klv2
    -leavefile2 filename.klv2

    The two options above will use leavefile1 for player1 and leavefile2
    for player2. Note that leave files only make sense for the `exhaustiveleave`
    players.

    -pegfile1 pegfile.json
    -pegfile2 pegfile.json

    pegfile refers to a pre-endgame heuristics file used for equity purposes.
    By default, it uses a file named preendgame.json.

    The leavefile and/or pegfile must be located inside the
    ./data/strategy/<lexicon> directory.
    Make sure to put it in the subdirectory for the correct lexicon.
    By default, if no file is specified, will use the default leave file
    for your DEFAULT_LEXICON (or the supplied lexicon).

    -botcode1 BOT_CODE
    -botcode2 BOT_CODE

    Uses specific bot types / strategies. Defaults to HASTY_BOT if not provided,
    which is a raw equity player. Types can be taken from the macondo.proto file.
    So far, these are:
    - HASTY_BOT,
    - LEVEL1_COMMON_WORD_BOT through LEVEL4_COMMON_WORD_BOT (for English and German),
    - LEVEL1_PROBABILISTIC through LEVEL5_PROBABILISTIC.
    - NO_LEAVE_BOT
    - SIMMING_BOT
    - FAST_ML_BOT
    - CUSTOM_BOT

    -threads 10

    Uses multiple threads. Defaults to `runtime.NumCPU()`.
    Note: You should set this to `1` if you're using any bots that sim or
    solve endgames etc. Instead, the simmer, endgamesolver, etc will use as
    many threads as it can.

    -minsimplies1 2
    -minsimplies2 3

    Minimum sim plies for player 1 is set to 2 plies, and minimum for player 2
    is set to 3 plies. If not specified, this defaults to 2 plies per bot,
    if the bot is a simming bot.
    This is used for Monte Carlo simulations (`help sim` for more info).

autoplay can be used to generate computer vs computer games for research
purposes.

To stop autoplay, type `autoplay stop`. If no log file is specified,
it will default to `/tmp/autoplay.txt`, otherwise, use the desired
filename as an option.

By default, autoplay will use two identical, fast AI players of type
'HASTY_BOT'. A HASTY_BOT player uses values for all possible
leaves that must already be in the data/strategy directory. If you don't have
any values or wish to try with no values, you can use the botcode NO_LEAVE_BOT.

In the future, we will add other types of players.

Note: If using SIMMING_BOT, we strongly recommend to set number of threads to 1.
This is because SIMMING_BOT already uses multithreading for its own sims.

### CUSTOM_BOT

If you use CUSTOM_BOT for either bot, you must provide a BotSpec for each bot
that is custom with the -botspec1 or -botspec2 commands. The BotSpec is a JSON
string that looks like
'{"algo":"none","params":{"has_endgame":true,"has_preendgame":true,"min_sim_plies":6,"has_simming":true}}'

The valid, case-sensitive param keys at the moment are:

- has_simming (bool)
- has_endgame (bool)
- has_preendgame (bool)
- has_infer (bool)
- min_sim_plies (int)
- sim_use_magpie(bool)

The boolean variables all default to false, and the integer variables default to 0.