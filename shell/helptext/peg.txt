peg [options] - solve pre-endgame exhaustively

Example:
    peg
    peg -threads 1
    peg -threads 8 -endgameplies 6 -maxtime 10
    peg stop

About:
    Macondo can solve an n-tile-in-the-bag pre-endgame exhaustively. It does this
    by solving all possible endgames using a fast search for it (see -first-win-optim
    option in the endgame).

    When considering `pass` as a move, Macondo will try all options exhaustively
    for our opponent. Our opponent may make a "mistake" from their perspective,
    since they do not know what our tiles are. We only add wins in the pass case if
    we are guaranteed to win with any given tile, even given any mistakes the
    opponent might make.

    Similar considerations exist when considering any non-bag-emptying play as a move.

    If there is more than 1 winner - i.e., more than 1 top play with
    the same number of pre-endgame wins, Macondo will solve the resulting
    endgames more accurately (-first-win option will be set to false).
    Instead of just finding a win, it will try to find the best win, and
    keep track of the total spreads. The play with the most wins and most
    spread is the overall pre-endgame winner. For now it will just try to
    tiebreak among the top 10 highest-scoring plays with the same number
    of wins.

    Important note: n-in-the-bag for n > 1 is not optimized and in certain cases
    will give incorrect answers for non-bag-emptying plays. (It will also
    be much slower when considering these plays). It is recommended that
    the -skip-non-emptying option be set for now. This will be fixed
    in a future release.

Optional arguments:
    peg stop

    This will cancel a running pre-endgame solve and show the best move
    found so far.

Options:
    -endgameplies 4

    Endgame plies defaults to 4. This is how far to look in the endgames. You may
    not need to look any farther than 2 plies if the spread difference is big
    (since you will likely only lose or win with an out bingo). On the other
    hand, you may want to look deeper if there's a Q or similar tile to draw,
    that may result in one player getting stuck with it.

    -threads 8

    Threads defaults to the number of cores in your machine. This is how many
    cores to use for the pre-endgame.

    -maxtime 10

    How much time to use. If we run out of time it will just return the best plays
    found so far. Unlimited by default.

    -early-cutoff true

    Macondo can stop analyzing a certain pre-endgame line if it finds that it will
    surely perform worse than the best line found so far. This speeds up analysis
    a lot of the time, at the cost of only the winning play being assured to have
    accurate results. If you turn this on, plays that were cut-off early will
    be marked with a ‚ùå symbol, and their stats may not be fully accurate.

    -skip-non-emptying true

    Macondo can skip analyzing plays that don't empty the bag.
    For example, Macondo can skip analyzing a pass if it is clear that there is no
    way any useful info can be obtained. For example, if we're down by 40 points
    in the pre-endgame and we don't have a playable bingo, we can be pretty sure
    we're not winning this game by passing, and this can save some time in the
    analysis. Macondo can't detect this situation by itself at this time, so
    you can set skip-non-emptying to true if you want to skip analyzing plays
    that don't empty the bag, such as passes, or other short plays.

    -opprack AENST

    If you have partial rack info for the opponent, enter it here. This can make
    pre-endgame analysis faster by skipping a bunch of racks the opponent can't have.

    -skip-tiebreaker true

    Setting this option to true will skip the spread-based tiebreaker. This can
    save some time since solving these endgames more accurately will be slower.

    -skip-losses true

    Setting this option to true will skip analyzing any pre-endgame plays as soon
    as it finds a loss. This can save some time if all you want to find are wins
    (or perhaps ties).

    -disable-id true

    Setting this option to true will disable iterative deepening. iterative
    deepening will try setting endgamePlies to 1, 2, 3, and so on until
    the maximum that you specify. This will allow you to have a potential
    answer much earlier.

    -only-solve "B4 DIEH.RD"

    Setting the -only-solve option will only solve the PEG for the given move. This
    is good if you want to just examine one move. You can specify this option
    multiple times to specify multiple moves.

    -log true

    Setting this option to true will write a detailed YAML log to ./macondo-peglog.
    This log contains information about every decision made during the solve, including:
    - Which tiles were drawn for each permutation
    - Win/loss/draw outcomes for each endgame
    - Early break decisions and optimistic solve logic
    - Cutoff decisions and why they were made
    - Recursive decision tree showing all moves explored
    The log is essential for debugging complex pre-endgame scenarios.